name: TF Apply
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
        default: dev
      app_version:
        description: 'Version of the app to deploy'
        required: true
        default: "1.0.0"
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: dev
      app_version:
        description: 'Version of the app to deploy'
        required: true
        default: "1.0.0"

jobs:
  tf_plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    workingg-directory: infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
        run: terraform init
      - name: Terraform Apply
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
        run: terraform apply -var-file="tfvars/${{ inputs.environment }}.tfvars"
